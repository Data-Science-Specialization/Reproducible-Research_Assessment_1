cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flags_shapes<-flags[,19:23]
flags_shapes<-flags[, 19:23]
flag_shapes<-flags[, 19:23]
rm(flags_shapes)
play()
rm(flags_shapes)
nxt()
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape-mat
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
bye()
swirls()
swirl()
summary(flags)
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flipt<-sample(c(0,1),100,replacement=TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2=rbinom(100,size=1,prob=0.7)
play()
flips2
nxt()
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm<-colmeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d1<-as.Date("1969-01-01")
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.Posixlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1
weekdays(d1)
months(t1)
quarters(t2)
t2<-"October 17, 1986 08:24"
t2<-c("October 17, 1986 08:24")
t3<-c("October 17, 1986 08:24")
t3<-"October 17, 1986 08:24"
strptime(t2, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() -t1
difftime(Sys.time(),t1,units='days')
data(cars)
info(cars)
info()
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(speed ~ dist, cars)
plot(x=cars$dist,y=cars$speed)
?plot
plot(cars,xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance", xlabel="Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance", xlab="Speed")
?plot
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
?par
plot(cars,pch=2)
data(mtcars)
play()
head(mtcars)
nxt()
?boxplot
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
bye()
set.seed(1)
rpois(5,2)
install.packages("RMySQL")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(nlme)
str(BodyWeight)
?lines
?lpoints
?axis
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?trellis.par.get
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?transform
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
?stats_smooth
qplot(votes, rating, data = movies) + geom_smooth()
?panel.abline
?geom_hex
?geom_point
setwd("/Users/Valentin/Documents/Education/Data Science/Reproducible Research/RepData_PeerAssessment1")
getwd()
dir()
stepData <- read.csv(unz("activity.zip", "activity.csv"))
str(stepData)
head(stepData)
head(stepData,100)
library(dplyr)
install.packages("dplyr")
library(dplyr)
vignette(dplyr)
vignette("dplyr")
?vignette
vignette(package=dplyr)
?mutate
?sapply
?sapply
?summary
?group_by
head(stepData)
stepDataGrpd <- group_by(stepData, date)
?summarise
?tbl_df
View(stepData)
rm(list=ls())
actvitiy <- read.csv(unz("activity.zip", "activity.csv"))
activity <- tbl_df(activity)            #Wrap data frame
activity <- group_by(activity, date)    #Group by date for easy stats
str(stepData)
str(activity)
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity <- tbl_df(activity)            #Wrap data frame
activity <- group_by(activity, date)    #Group by date for easy stats
rm(activity)
rm(rm=ls()
rm(rm=ls())
rm(list=ls())
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity <- tbl_df(activity)            #Wrap data frame
activity <- group_by(activity, date)    #Group by date for easy stats
activity
summarise(activity)
?summarise
summarise(activity,mean)
summarise(activity,mean(steps))
summarise(activity,mean(steps,na.rm=TRUE))
summarise(activity,mean(steps,na.rm=TRUE))
summarise(activity,mean(steps,na.rm=TRUE))[2]
mean(summarise(activity,mean(steps,na.rm=TRUE))[2],na.rm=TRUE)
mean(summarise(activity,mean(steps,na.rm=TRUE))[2])
mean(summarise(activity,mean(steps))[2])
mean(summarise(activity,mean(steps))[2],na.rm=TRUE
)
activity
activity[,3]
mean(activity[,1])
mean(activity)
?mean
mean(activity,na.rm=TRUE)
activity
select(activity,steps)
?select
activity
select(activity,steps)
select(activity,steps:date)
select(activity, steps)
select(activity, -(date:interval))
library(dplyr)
activity <- read.csv(unz("activity.zip", "activity.csv"))
activity <- tbl_df(activity)            #Wrap data frame
activity
select(activity, steps)
mean(select(activity, steps))
mean(select(activity, steps),na.rm=TRUE)
as.numeric(select(activity, steps))
activity <- read.csv(unz("activity.zip", "activity.csv"))
head(activity)
str(activity)
mean(activity$steps)
mean(activity$steps,na.rm=TRUE)
activity <- tbl_df(activity)            #Wrap data frame
activity
activity$steps
mean(activity$steps, na.rm=TRUE)
activity
activity <- group_by(activity, date)    #Group by date for easy stats
activity
summarise(activity)
summarise(activity,mean(steps))
?sum
summarise(activity,sum(steps))
activity
dailyActivity <- summarise(activity,sum(steps))
dailyActivity
?rename
rename(dailyActivity, steps = sum(steps))
dailyActivity$V2
dailyActivity$
dailyActivity
dailyActivity$`sum(steps)`
rename(dailyActivity, steps = 'sum(steps')
rename(dailyActivity, sum(steps) = steps
rename(dailyActivity, sum(steps) = steps)
rename(dailyActivity, 'sum(steps)' = steps)
names(dailyActivity)
names(dailyActivity)[2] <- c('steps')
names(dailyActivity)
?summarise
dailyActivity <- summarise(activity, daysteps=sum(steps))
dailyActivity
suppressPackageStartupMessages(library(dplyr))
intActivity <- unz("activity.zip", "activity.csv") %>%
read.csv() %>%
tbl_df() %>%            #Wrap data frame for easy processing
group_by(date)    #Group by date for easy stats
dailyActivity <- summarise(intActivity, daysteps=sum(steps))
dailyActivity$daysteps
mean(dailyActivity$daysteps, na.rm=TRUE)
?mean
?histogram
??histogram
library(graphics)
library(ggplot2)
?geom_histogram
?geom_point
p <- ggplot(dailyActivity, aes(daysteps))
p+geom_histogram()
?geom_histogram
ggplot(dailyActivity, aes(daysteps)) + geom_histogram(binwidth = 500)
ggplot(dailyActivity, aes(daysteps)) + geom_histogram(binwidth = 1000)
?range
range(dailyActivity$daysteps)
range(dailyActivity$daysteps, na.rm=TRUE
)
range(dailyActivity$daysteps, na.rm=TRUE
)[2]
21194/30
?group_by
intActivity
dailyIntActivity <- group_by(intActivity, interval)
dailyIntActivity
dailyIntActivity <- group_by(intActivity, interval)
summarise(dailyIntActivity,mean())
summarise(dailyIntActivity,mean(steps))
summarise(dailyIntActivity,mean(steps,na.rm=TRUE))
?group_by
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
Activity <- unz("activity.zip", "activity.csv") %>%
read.csv() %>%          #Read data from .csv file
tbl_df()                #Wrap data frame for easy processing
group_by(Activity, date)    #Group by date for easy daily stats
dailyActivity <- summarise(Activity, daysteps=sum(steps))
dailyActivity
Activity
dailyActivity <- summarise(Activity, daysteps=sum(steps, na.rm=TRUE))
dailyActivity
summarise(Activity, sum(steps))
Activity
activity
activity <- ungroup(activity)
activity
intervalActivity
?geom_line
?labs
?geom_vline
uppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
activity <- unz("activity.zip", "activity.csv") %>%
read.csv() %>%          #Read data from .csv file
tbl_df()                #Wrap data frame for easy processing
ctivity <- group_by(activity, date)    #Group by date for easy daily stats
dailyActivity <- summarise(activity, daysteps=sum(steps))
activity <- ungroup(activity)           #Ungroup for further processing
dailyMean <- mean(dailyActivity$daysteps, na.rm=TRUE)
dailyMedian <- median(dailyActivity$daysteps, na.rm=TRUE)
activity <- group_by(activity, interval)    #Group by date for easy daily stats
intervalActivity <- summarise(activity, meanInterval=mean(steps, na.rm=TRUE))
activity <- ungroup(activity)           #Ungroup for further processing
intervalActivity
?max
max(intervalActivity$meanInterval)
?which
?where
which.max(intervalActivity)
sapply(intervalActivity, which.max())
?sapply
sapply(intervalActivity, which.max(intervalActivity))
which.max(intervalActivity$meanInterval)
intervalActivity$interval[104]
?geom_vline
?annotation_custom
?grid.text
?geom_text
??hjust
?ymd
?strptime
activity
strptime(activity$date,"%Y-%m-%d")
activity$date <- strptime(activity$date,"%Y-%m-%d")
activity
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(lubridate))
activity <- unz("activity.zip", "activity.csv") %>%
read.csv() %>%          #Read data from .csv file
tbl_df()                #Wrap data frame for easy processing
activity
ymd(activity$date)
library(lubridate)
install.packages('lubridate')
library(lubridate)
ymd(activity$date)
activity$date <- ymd(activity$date)
activity
?sapply
?tapply
activity <- group_by(activity, date)    #Group by date for easy daily stats
dailyActivity <- summarise(activity, daysteps=sum(steps))
activity <- ungroup(activity)           #Ungroup for further processing
activity <- group_by(activity, date)    #Group by date for easy daily stats
activity
?summarise
?summarise
?sapply
?summarise
?summarize
?tapply
activity
ungroup(activity)
tapply(activity$steps, activity$date, activity$steps[is.na(activity$steps)] = 5)
tapply(activity$steps, activity$date, activity$steps[is.na(activity$steps)] <- 5)
tapply(activity$steps, activity$date, function(x) x[is.na(x)] <- 5)
activity
tapply(activity$steps, activity$date, function(x) x[is.na(x)] <- mean(x, na.rm=TRUE))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(lubridate))
activity <- unz("activity.zip", "activity.csv") %>%
read.csv() %>%          #Read data from .csv file
tbl_df()                #Wrap data frame for easy processing
activity$date <- ymd(activity$date)     #Convert date factors into time class
tapply(activity$steps, activity$date, function(x) x[is.na(x)] <- mean(x, na.rm=TRUE))
tapply(activity$steps, activity$interval, function(x) x[is.na(x)] <- mean(x, na.rm=TRUE))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(lubridate))
activity <- unz("activity.zip", "activity.csv") %>%
read.csv() %>%          #Read data from .csv file
tbl_df()                #Wrap data frame for easy processing
activity$date <- ymd(activity$date)     #Convert date factors into time class
tapply(activity$steps, activity$interval, function(x) x[is.na(x)] <- mean(x, na.rm=TRUE))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(lubridate))
activity <- unz("activity.zip", "activity.csv") %>%
read.csv() %>%          #Read data from .csv file
tbl_df()                #Wrap data frame for easy processing
activity$date <- ymd(activity$date)     #Convert date factors into time class
activityImputed <- tapply(activity$steps, activity$interval, function(x) x[is.na(x)] <- mean(x, na.rm=TRUE))
activityImputed
activity
?tapply
activity
tapply(activity$steps, activity$interval, function(x) x[is.na(x)] = mean(x, na.rm=TRUE))
activity
tapply(activity$steps, activity$interval, function(x) {x[is.na(x)] = mean(x, na.rm=TRUE)})
?lapply
lapply(activity$steps, activity$interval, function(x) {x[is.na(x)] = mean(x, na.rm=TRUE)})
lapply(activity$steps, activity$interval, function(x) {x[is.na(x)] <- mean(x, na.rm=TRUE)})
tapply(activity$steps, activity$interval, function(x) {x[is.na(x)] <- mean(x, na.rm=TRUE)})
?factor
?transform
?replace
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(lubridate))
activity <- unz("activity.zip", "activity.csv") %>%
read.csv()
head(activity)
tapply(activity$steps, activity$interval, function(x) x[is.na(x)] <- mean(x, na.rm=TRUE))
str(activity)
max(activity$interval)
activity
head(activity)
activity$steps[is.na(activity$steps)] <- mean(activity$steps, na.rm=TRUE)
head(activity)
tapply(activity$steps, activity$interval, mean
tapply(activity$steps, activity$interval, mean)
tapply(activity$steps, activity$interval, function(x) x[is.na(x)] <<- mean(x, na.rm=TRUE))
?mutate
library(dplyr)
?mutate
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(lubridate))
activity <- unz("activity.zip", "activity.csv") %>%
read.csv() %>%          #Read data from .csv file
tbl_df()                #Wrap data frame for easy processing
activity$date <- ymd(activity$date)     #Convert date factors into time class
activity
activity <- group_by(activity, interval)
activity
is.na('NA')
is.na("NA")
is.na("NA")+1
!is.na("NA")+1
!is.na("NA")
!is.na("NA") + 1
!is.na("NA")*0.5
mutate(activity, steps[is.na(steps)] = mean(steps, na.rm=TRUE))
mutate(activity, impSteps = steps)
mutate(activity, impSteps[is.na(steps)] = mean(steps, na.rm=TRUE)
transmute(activity, impSteps[is.na(steps)] = mean(steps, na.rm=TRUE)
filter(activity, date)
mutate(activity, interval = interval - 5)
mutate(activity, steps = impSteps - 5)
mutate(activity, steps = steps - 5)
activity
by(activity$steps, activity$interval, function(x) x[is.na(x)] <- mean(x, na.rm=TRUE))
by(activity$steps, activity$interval, function(x) mean(x, na.rm=TRUE))
activity
